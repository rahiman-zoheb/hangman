# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
# https://www.callicoder.com/spring-boot-mysql-react-docker-compose-example/


version: "3"

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: hangman # Use an image built from the specified dockerfile in the `hangman` directory.
      dockerfile: Dockerfile
    ports:
      - "9080:8080" # Forward the exposed port 8080 on the container to port 9080 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/hangman?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: hangman
      SPRING_DATASOURCE_PASSWORD: hangman     
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service 
  # app-client:
  #   build:
  #     context: hangman-webapp # Use an image built from the specified dockerfile in the `hangman-webapp` directory.
  #     dockerfile: Dockerfile
  #   ports:
  #     - "9090:9090" # Map the exposed port 9090 on the container to port 9090 on the host machine
  #   restart: always
  #   depends_on:
  #     - db # This service depends on mysql. Start that first.
  #     - app-server
  #   environment: # Pass environment variables to the service
  #     SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/hangman?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
  #     SPRING_DATASOURCE_USERNAME: hangman
  #     SPRING_DATASOURCE_PASSWORD: hangman     
  #   networks:
  #     - frontend  
  #     - backend

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: hangman
      MYSQL_USER: hangman
      MYSQL_PASSWORD: hangman
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:   
